<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAACOFJREFUeF7t
        nQmsbdMdhx9Fi6JUlXqGtiKiaIpXlZgixkYoMdPGEFpUqDapJhUl5plEBCE1VIeESlpCxDw1RcRMB9XJ
        1KLD6/Qe7/X3rftf5+237znn7nvfOs69Z/++5Mt7d+919tl37/9e417rzjLGGGOMMcYYY4wxxhhjjDHG
        GGOMMcYYY4wxxhhjjDHGGDPjWLhw4Wq2qKvIpWVc4WmOTvRxW8wn5M/lmjKu8DRHJ2rK8nu5rowrPM1J
        p2xK4gBoOQ6AluMAaDkOgJbjAGg5DoCW4wBoOQ6AluMAaDkOgJbjAGg5DoCW4wBoOQ6AlrNYAPCv/JDc
        SH5uAG4m15JTewlFHzJl6QRAuJw8W74u/zoA/yKfl6fL1WXc2YboA6Ys9QDg/y/LQbNAXi1XlHF3G8An
        TVHqAfBp+SdZ57/yD5LgmIy/k3+UPP3vyir/kV+R6bsbwadMUZoEwFx5olxfzpbrTNJPSsr/4yUBUeUp
        +SkZd3gC0kdMSZoEAC+PflTGXZg8fDY8QP5TVrlILiMjdR9SclOSJgHwoFxJxl2YGnxe0sL4vqzyltxZ
        pjR9IbUpSpMAeEgucQAAx5CflfWi4C45cS6TkpqSDCMA8NvyPZmhgniSTPt7QkpTlPc1AIDjyDXkA7IK
        rQZyh0jZhZTMlGRYAYB7yX/IKtfL5WWkrpGSmJK87wEAHEt+UF4jq9DkpKWQ0oyDFKYoQwkA4HhyU/lb
        WYV5i/QfRMoKabcpybADAL8l672EZ8nxA0ZplynJ0AIAOKZkUOheWeUNub1MaTqwxxRlOgQA7iH/Jqsw
        df0jMlKLtNmUZKgBABxXMgx9lawyTx4nU5qc2JRl6AEAHFt+RtIXUOUlubHsJDRlaRIAv5KM6KU0gyCO
        /TFJC6AOOQNNRgfAAGgSAHTZ3iqPlF8ekIfLH0iy/Tp0Fn1JOgAGQJMAyPAWD8EwCDl2PyiGZjsAyjOZ
        ABgm9BNc4gAoz0wJAJjrACjPTAqAdIKmLA6AluMAaDkOgJbjAGg5DoCWM+MC4FVbzNfkY3JtOWMCYENb
        VKZlpVk54fQOADM4uL5yZgYA+0KGDT8upzKJsY2yWMMH5MwNALZL5pztKxm2ZAGC6hRl291XJKNsn5DT
        NQAYJeyMFMYtXwTbJE89K078S5rJMZ1bAX+XZ8qj5dNsiNs+Bj+H+0kmFEwEkfS2ZE763fI2eY/k4O/I
        icakR5GSAfA/yWIQj8o75O2SHIbchsUgJsvPJDk750UQLIhbP0bs4Okn2+8Hb5lwUrx/voVcVS4rl4p/
        mZW6lfyO5JWk+bItlAgApnffJHkQaVWsIHmnH5nmxfF56/dK+WfZlGsl94jzYhrZvLj1Y8QO/uLVC7IX
        RB8rU3DTqexwgrxedKxk+/6SlxHTO2eSSYsECsuhtIElCQBe0uAp5/19mpKs9zNHHipPkDy1u0nqGNxI
        AmJzeYNkyZmJaBQA1PbrU4syD8vPSw7CiXFAbmz1vTN+CVbEukXuIskROO62stsLiqPGVAOALP18yd8e
        5MbzXt99sl6Uku5FeY7k2HwH6b8pSduP62SaHST3kfPj1o8RO/jDh4/IOmT5rHVHZH5VVrMeTpDyiiis
        niwTE06T6RVoyVTlJ+UoM5UA4AFi6hblMw8gM3qrTzTv+HHj6y94UvfaVfI95Ma8819fLqYKS9NwPhQj
        F7Ahbv0Y/Bx+j50VeMq3luwjq89fwklS6fuG3F3yxBMc1CFyGsr/c2UuEnaU5BCjylQC4EeSh4TXuKv1
        L6ZzMduXImAnuafk3vAQERTAvcnLwZDbnid7Vb75DBV0po2lSn7c+kWwTdKhwRIjwIcow9m+naS/G6io
        cOPJMfLnskTYQTIvW0JzkiyNfRQf/BKj2kKoBwB1pfrCDVW4RszoJS3Zer4u5LgUm6lTqXJvkLGGy2TO
        JSha15Pso37wS9mE59KBq2hjlsj9oeTk+UKmGv1YAtnR1+X42aaCbSERy3p28AtJjyLbqTgyQ2UUqQcA
        sqQb/Sqs3nVhxYvlwZI0W8r8cD0jc1DEVV1EbKdlcLnMfFfmfRQL9e+qyj4ewjlxyMXRjuqXkBvwf36J
        NyXQnvywjE+Mh32SALlUAtGaJiNItlNcHCO/NmIeIvtemyqkC3OxSzl/hEzbexH7eZByi41cYPJLxTaB
        g8qjJFAkHCb7niBEGoqNvGwJ5dOEn2sTcT0oMunoAW4oFcFI0R32h+QiQC9fqqcVhQOGZGFAzZ5OnkjR
        G9JIfpnfSKCy0ynTTOcaUfmjRg/0A1DcRorekEaSW1BvoLK9N9uKwgFDKihAmU5xECl6QxpZ7Viib6DZ
        CpYtgWshuUYMuMFPZaNrRBpJHYJcGQ9kW1E4YEhLAKgAflFGit6QRtIrmJt9dF2m7WaMuB4ry9z3Qu0/
        taz6wf7wZAncF5qKkaIgHFTSBflvCdQkU5diL9gXUjEiOmHxxQlMvkZcS5Z6B3rzaP5Fiu6wX9J3cKcE
        mpOpZ7A4HFTSp5+7chmhSvUA7EbsYzXs/Bk6QzaRkcIA1yPk3YvcrmcgqGdLgu0hHUR5yP5Gmbrdi8NB
        Q3oB88geCx6nG4qZ/LOk8vcTmSHX6Npv0Ha4JpK1e3JLgG71M2TuQo+UnbTkGOTIDMwB9bId5GJpixIH
        5ySpyWeouJCtbyApx4ha+g3oBaRMy71ajGGnniozHq5LuI3krSIgCG6WdOrQgcaAD9efvxFEiyx3GtFv
        cKocbOuKg4f0ctFfnct1cgR6vxgpJFf4tawOZFCpSa0GNN3J10fSlKuu/E2f/bPyfkkXLxXq/GBR8aNX
        b6DrDXXgS0LarUQhAxG9+vTJlq6Q9Falz5n+5OskvyB5yHq9lcWQO93FvB/Qex3gQcEXSspzmngMCFHW
        M2ZAVs+JnyKpJA6mUjLCcL1CilOyf94RoHOIIpWRV/44BJ0/nfGGoZFPQFL+UEaRFXUmRZglI64jFT56
        Bqlj5VfDfH2NMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMaatzJr1f7lPmY5UBOskAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>